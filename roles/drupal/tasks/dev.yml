---
- name: Development Ingress Block
  block:
    - name: Development Port Data
      set_fact:
        side_car_port_data:
          - key: "{{ dev_port | int }}"
            value: "{{ ansible_operator_meta.namespace }}/{{ ansible_operator_meta.name }}-ssh:{{ dev_port }}"
    - name: Development TCP Port Config Map
      k8s:
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: tcp-services
            namespace: ingress-nginx
          data: "{{ side_car_port_data | items2dict }}"
  when: manage_dev_ingress is defined and manage_dev_ingress
- name: Development Deployment
  k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-ssh'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: '{{ ansible_operator_meta.name }}-ssh'
        template:
          metadata:
            labels:
              app: '{{ ansible_operator_meta.name }}-ssh'
          spec:
            containers:
              - name: drupal-ssh
                image: '{{ dev_image }}'
                hostname: '{{ dev_hostname }}'
                command: '{{ dev_command | default(omit) }}'
                args: '{{ dev_args | default(omit) }}'
                ports:
                  - containerPort: '{{ dev_port }}'
                env: "{{ dev_environment }}"
                livenessProbe:
                  tcpSocket:
                    port: '{{ dev_port }}'
                  initialDelaySeconds: 60
                readinessProbe:
                  tcpSocket:
                    port: '{{ dev_port }}'
                  initialDelaySeconds: 30
                volumeMounts: "{{ drupal_volume_mounts }}"
            volumes: "{{ drupal_volumes }}"

- name: Development Service
  k8s:
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-ssh'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        type: LoadBalancer
        ports:
          - port: '{{ dev_port }}'
            targetPort: '{{ dev_port }}'
            protocol: TCP
        selector:
          app: '{{ ansible_operator_meta.name }}-ssh'
